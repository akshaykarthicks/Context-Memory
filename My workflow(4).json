{
  "name": "My workflow",
  "nodes": [
    {
      "parameters": {
        "content": "# Simple Memory\n\n",
        "height": 500,
        "width": 940,
        "color": 2
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1856,
        -32
      ],
      "id": "efa4cc70-b918-4bef-8dd3-989d2fe0147a",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "content": "## Less Token  Memo",
        "height": 672,
        "width": 1552
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1856,
        480
      ],
      "typeVersion": 1,
      "id": "161f0d86-e0f8-491c-b2cd-019b80b589cf",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenRouter",
      "typeVersion": 1,
      "position": [
        2608,
        752
      ],
      "id": "4c88a63c-4b24-4e75-8364-70eb8d41200f",
      "name": "GPT 4.1 mini2"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.message.text }}",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2,
      "position": [
        2128,
        96
      ],
      "id": "0c71ef53-b042-4025-bf2c-c77a876e197c",
      "name": "AI Agent1"
    },
    {
      "parameters": {
        "updates": [
          "message"
        ],
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.telegramTrigger",
      "typeVersion": 1.2,
      "position": [
        1904,
        96
      ],
      "id": "a077b54e-ab73-444f-891a-bf0e26550dd9",
      "name": "Telegram Trigger3",
      "webhookId": "a34c3482-9875-488f-bbc5-a2f1e13d4c2b"
    },
    {
      "parameters": {
        "chatId": "={{ $('Telegram Trigger3').item.json.message.chat.id }}",
        "text": "={{ $json.output }}",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        2528,
        96
      ],
      "id": "bb96d7c6-7543-4c3f-a2fd-e7267e31c2c7",
      "name": "Send a text message3",
      "webhookId": "75cc86ae-39ba-4d05-a857-25695ce4ea6f"
    },
    {
      "parameters": {
        "updates": [
          "message"
        ],
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.telegramTrigger",
      "typeVersion": 1.2,
      "position": [
        1904,
        528
      ],
      "id": "223e591d-336d-49cd-85cf-52986b79fe2e",
      "name": "Telegram Trigger4",
      "webhookId": "a34c3482-9875-488f-bbc5-a2f1e13d4c2b",
      "disabled": true
    },
    {
      "parameters": {
        "chatId": "={{ $('Telegram Trigger4').item.json.message.chat.id }}",
        "text": "={{ $('AI Agent ').item.json.output }}",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        3200,
        528
      ],
      "id": "93fb17b2-29fd-47f4-8a99-46b865a12187",
      "name": "Send a text message4",
      "webhookId": "75cc86ae-39ba-4d05-a857-25695ce4ea6f"
    },
    {
      "parameters": {
        "jsCode": "// n8n Code Node\n// This code extracts all facts from the JSON structure\n\n// Get the input data\nconst items = $input.all();\nconst facts = [];\n\n// Process each item\nfor (const item of items) {\n  try {\n    // Parse the data string if it exists\n    if (item.json.data) {\n      const parsedData = JSON.parse(item.json.data);\n      \n      // Check if edges array exists\n      if (parsedData.edges && Array.isArray(parsedData.edges)) {\n        // Extract facts from each edge\n        parsedData.edges.forEach(edge => {\n          if (edge.fact) {\n            facts.push(edge.fact);\n          }\n        });\n      }\n    }\n  } catch (error) {\n    // Handle parsing errors\n    console.error('Error parsing data:', error);\n  }\n}\n\n// Return all facts as an array in a single item\nreturn [{\n  json: {\n    facts: facts\n  }\n}];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2352,
        528
      ],
      "id": "52dcb8d2-963e-48db-840f-6870b0fee494",
      "name": "Code3"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.getzep.com/api/v2/graph/search",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "zepApi",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"user_id\": \"zep_c6b8b1f0611f69464c860b3ae885639e022d1c54b59ffe82d16faf9c08cc24b0\",\n  \"query\": \"{{ $json.message.text }}\",\n  \"scope\": \"edges\",\n  \"limit\": 3,\n  \"search_filters\": {\n    \"min_relevance\": 0.7\n  }\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2128,
        528
      ],
      "id": "f50d352d-bf64-4559-bb3a-10f30eb37f05",
      "name": "User Graph2"
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $('Telegram Trigger4').item.json.message.chat.id }}"
      },
      "type": "@n8n/n8n-nodes-langchain.memoryPostgresChat",
      "typeVersion": 1.3,
      "position": [
        2736,
        752
      ],
      "id": "34381930-2254-43e1-b8ee-02986a9ec1ee",
      "name": "Postgres Chat Memory1"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenRouter",
      "typeVersion": 1,
      "position": [
        2160,
        320
      ],
      "id": "30047caf-68a4-46eb-8d2d-986360f083c4",
      "name": "GPT 4.1 mini3"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $('Telegram Trigger4').item.json.message.text }}",
        "options": {
          "systemMessage": "=You are a helpful assistant.\n\nHere is some additional information about Nate:\n{{ $json.facts.join(\"\\n\") }}"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2,
      "position": [
        2576,
        528
      ],
      "id": "d598e1cb-bac1-4ff4-aca7-2e4c44e73f71",
      "name": "AI Agent "
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "=1"
      },
      "type": "@n8n/n8n-nodes-langchain.memoryZep",
      "typeVersion": 1.3,
      "position": [
        2288,
        320
      ],
      "id": "517851bb-36e0-4b60-8736-2bcac2838897",
      "name": "Zep1"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://api.getzep.com/api/v2/sessions/{{ $('Telegram Trigger4').item.json.message.chat.id }}/memory",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "zepApi",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"user_id\": \"zep_c6b8b1f0611f69464c860b3ae885639e022d1c54b59ffe82d16faf9c08cc24b0\",\n  \"session_id\": \"{{ $('Telegram Trigger4').item.json.message.chat.id }}\",\n  \"messages\": [\n    {\n      \"role_type\": \"user\",\n      \"content\": \"{{ $('Telegram Trigger4').item.json.message.text }}\"\n    },\n    {\n      \"role_type\": \"assistant\",\n      \"content\": \"{{ $json.output.replace(/\\n/g, '').replace(/\"/g, '') }}\"\n    }\n  ]\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2976,
        528
      ],
      "id": "25998d9e-57da-4b61-9e64-1b961461029d",
      "name": "Add Memory2"
    }
  ],
  "pinData": {},
  "connections": {
    "GPT 4.1 mini2": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent ",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent1": {
      "main": [
        [
          {
            "node": "Send a text message3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Telegram Trigger3": {
      "main": [
        [
          {
            "node": "AI Agent1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Telegram Trigger4": {
      "main": [
        [
          {
            "node": "User Graph2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code3": {
      "main": [
        [
          {
            "node": "AI Agent ",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "User Graph2": {
      "main": [
        [
          {
            "node": "Code3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres Chat Memory1": {
      "ai_memory": [
        [
          {
            "node": "AI Agent ",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "GPT 4.1 mini3": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent1",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent ": {
      "main": [
        [
          {
            "node": "Add Memory2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Zep1": {
      "ai_memory": [
        [
          {
            "node": "AI Agent1",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Add Memory2": {
      "main": [
        [
          {
            "node": "Send a text message4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "7f512dbb-6f00-4051-88a9-4e0604e7e19e",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "6d5ef614bd174750a839321e42d79e8089a8bdcaa09119c775f48574d13bf188"
  },
  "id": "jNhynC8uj3a1uwYQ",
  "tags": []
}